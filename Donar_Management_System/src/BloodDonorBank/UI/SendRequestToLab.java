/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package BloodDonorBank.UI;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import model.ServiceHospital;

/**
 *
 * @author Gayatri
 */
public class SendRequestToLab extends javax.swing.JPanel {

    /**
     * Creates new form SendRequestToLab
     */
    
            ServiceHospital sh;
    String selectedhname, selectedpname  ,selectedentitytype,selectedentityvalue,reqstatus;
    int selectedquantity;
    public SendRequestToLab() throws SQLException {
        initComponents();
        
        String temp[]= null;
        
        ServiceHospital sh = new ServiceHospital();
           ArrayList<String> temp1 = sh.loadBankRequests();
            for (int i =0; i< temp1.size();i++){
                
        DefaultTableModel tblmodel = (DefaultTableModel) RequestByHospitalTable.getModel();

            temp = temp1.get(i).split(",");
             tblmodel.addRow(temp);
            }
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        RequestByHospitalTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));

        RequestByHospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Blood/Organ", "Entity Value", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        RequestByHospitalTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RequestByHospitalTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(RequestByHospitalTable);

        jButton1.setBackground(new java.awt.Color(0, 153, 153));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Send Request To Labarotary");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 871, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                try {
                    // TODO add your handling code here:
                    
                    String temp[]= null;
                    
                    ServiceHospital sh = new ServiceHospital();
                    sh.insertRequests(selectedentitytype, selectedentityvalue, selectedquantity, reqstatus);
                    
                        DefaultTableModel tblmodel = (DefaultTableModel) RequestByHospitalTable.getModel();
                      while (tblmodel.getRowCount()>0)
                        {
                           tblmodel.removeRow(0);
                        }
                    ArrayList<String> temp1=sh.loadBankRequests();
                    for (int i =0; i< temp1.size();i++){
                        
                        tblmodel = (DefaultTableModel) RequestByHospitalTable.getModel();
                        temp = temp1.get(i).split(",");
                        tblmodel.addRow(temp);
                    }   } catch (SQLException ex) {
                    Logger.getLogger(SendRequestToLab.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void RequestByHospitalTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RequestByHospitalTableMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel tblmodel = (DefaultTableModel) RequestByHospitalTable.getModel();
        
         selectedentitytype = tblmodel.getValueAt(RequestByHospitalTable.getSelectedRow(),0).toString();
         selectedentityvalue = tblmodel.getValueAt(RequestByHospitalTable.getSelectedRow(),1).toString();
         selectedquantity = Integer.parseInt(tblmodel.getValueAt(RequestByHospitalTable.getSelectedRow(),2).toString());
         reqstatus = tblmodel.getValueAt(RequestByHospitalTable.getSelectedRow(),3).toString();
        System.out.println(selectedpname+ selectedentitytype+selectedentityvalue);
        
        
    }//GEN-LAST:event_RequestByHospitalTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable RequestByHospitalTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
